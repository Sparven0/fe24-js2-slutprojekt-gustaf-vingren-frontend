class e{constructor(e,t,n){this.username=e,this.email=t,this.role=n}displayUser(e,t,n){let a=document.querySelector(".loginWrapper"),s=document.querySelector(".member");s&&s.remove();let o=document.createElement("div");o.classList.add("member"),o.innerHTML=`
            <div>
                <h1>Current user</h1>
                <br></br>
                <h2>${e}</h2>
                <p>${t}</p>
                <p>${n}</p>
            </div>`,a.append(o)}displayMember(){let e=document.querySelector(".loginWrapper"),t=document.querySelector(".member");t&&t.remove();let n=document.createElement("div");n.classList.add("member"),n.innerHTML=`
            <div>
                <h1>Current user</h1>
                <br></br>
                <h2>${this.username}</h2>
                <p>${this.email}</p>
                <p>${this.role}</p>
            </div>`,e.append(n)}}const t="https://fe24-js2-slutprojekt-gustaf-vingren.onrender.com/tasks",n="https://fe24-js2-slutprojekt-gustaf-vingren.onrender.com/new-task",a="https://fe24-js2-slutprojekt-gustaf-vingren.onrender.com/tasks";async function s(e,t){console.log(e,t);let n={method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify({isComplete:t})};try{let t=await fetch("https://fe24-js2-slutprojekt-gustaf-vingren.onrender.com/tasks/"+e,n),a=await t.json();console.log(a)}catch(e){console.log("Error updating task",e)}}async function o(e){try{let t=await fetch("https://fe24-js2-slutprojekt-gustaf-vingren.onrender.com/tasks/"+e,{method:"DELETE",headers:{"Content-Type":"application/json"}}),n=await t.json();await d(),console.log(n)}catch(e){console.log("Error deleting task",e)}}async function r(e,t){let n={method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:t})};try{let t=await fetch("https://fe24-js2-slutprojekt-gustaf-vingren.onrender.com/assign-task/"+e,n),a=await t.json();console.log(a)}catch(e){console.log("Error updating task",e)}}async function l(){try{let e=await fetch(a);return await e.json()}catch(e){return console.log("Error getting tasks",e),[]}}async function i(){let e=await fetch(`${a}`),t=await e.json();return t.forEach(e=>{!0==e.isComplete&&function(e){let t=document.querySelector("#completedTasks"),n=document.createElement("li");n.classList.add("taskElementC");let a=document.createElement("button");a.innerHTML="Remove task",a.classList.add("removeBtn"),a.addEventListener("click",async t=>{await o(e.id),n.remove();let a=document.querySelector("#incompleteTasks");a.querySelectorAll(".taskElement").forEach(t=>{t.innerHTML.includes(e.description)&&a.removeChild(t)})}),n.innerHTML=`<p class="taskElementTitle">${e.title}</p><p class="taskElementCtext">Description: ${e.description}</p> <p class="taskElementCtext">Completed by: ${e.username}</p>`,n.append(a),t.append(n)}(e)}),t}async function c(){document.querySelector("#incompleteTasks").innerHTML="";let e=await fetch(`${a}`),t=await e.json();return t.forEach(e=>{"not-assigned"!==e.username&&!1==e.isComplete&&function(e){let t=document.querySelector("#incompleteTasks"),n=document.createElement("li");n.classList.add("taskElement"),n.innerHTML=`<p class="taskElementTitle">${e.title}</p><p class ="taskElementText">Role: ${e.role}</p><p class="taskElementPtext">Description:</p> ${e.description} <p class="taskElementPtext">Assigned to: ${e.username}</p><p class="taskElementPtext">Created: ${e.timeStamp}</p><p class=""taskElementPtext>Due: ${e.dueDate}</p>`,t.append(n)}(e)}),t}async function m(e){await u();let n=await fetch(`${t}/${e}`),a=await n.json();return a.forEach(e=>{!1==e.isComplete&&"not-assigned"!==e.username&&p(e)}),a}async function d(){let e=await l();return e.forEach(e=>{"not-assigned"==e.username&&h(e)}),e}async function u(){document.querySelector("#incompleteTasks").innerHTML=""}async function p(e){await u();let t=document.querySelector("#incompleteTasks"),n=document.createElement("li");n.classList.add("taskElement");let a=document.createElement("div");a.classList.add("boxDiv");let o=document.createElement("input"),r=document.createElement("label");r.innerText="Completed",o.type="checkbox",o.id="isCompletedBox",o.addEventListener("change",async a=>{await d(),await i(),await s(e.id,o.checked),o.checked&&(document.querySelectorAll(".taskElementC").forEach(e=>{e.remove()}),t.removeChild(n)),await i()}),a.append(o,r),n.innerHTML=`
  <p class="taskElementTitle">${e.title}</p>
<p class="taskElementText">Description:</p> ${e.description}
<p class="taskElementText">Assigned to: ${e.username}</p>
<p class="taskElementText">Due date: </p>${e.dueDate}
<p class="taskElementText">Created: </p>${e.timeStamp}`,n.append(a),t.append(n)}async function h(e){let t=document.querySelector("#notAssignedTasks");t.innerHTML="";let n=document.createElement("li");n.classList.add("taskElementN"),n.innerHTML=`<p class="taskElementTitle">${e.title}</p><p class="taskElementCtext">Description: ${e.description}</p> <p class="taskElementCtext">Assigned to: ${e.username}</p> <p class="taskElementCtext>Role: ${e.role}</p><p class="taskElementCtext>Due: ${e.dueDate}</p><p class="taskElementCtext>Created: ${e.timeStamp}</p>`;let a=document.createElement("form");a.id="assignUserForm";let s=document.createElement("select");s.id="assignedMemberOptions2";let o=document.createElement("option");o.value="not-assigned",o.innerText="Not Assigned",s.append(o);let l=await y();l.forEach(t=>{if(t.role===e.role){let e=document.createElement("option");e.value=t.username,e.innerText=`${t.username} (Role: ${t.role})`,s.append(e)}});let i=document.createElement("button");i.id="saveBtn",i.type="submit",i.innerHTML="Save changes",i.addEventListener("click",async t=>{t.preventDefault();let a=s.value,o=l.find(e=>e.username===a);o&&o.role===e.role?(await r(e.id,a),n.remove(),c()):alert(`Please select a user with the role: ${e.role}`)}),a.append(s,i),n.append(a),t.append(n)}async function g(e){e.innerHTML="";let t=await y(),n=document.createElement("option");n.value="not-assigned",n.innerText="Not Assigned";let a=document.createElement("option");a.value="any",a.innerText="any",t.forEach(t=>{let s=document.createElement("option");s.value=t.username,t.role,s.innerText=`Member: ${t.username}, Role: ${t.role}`,e.append(n,s,a)})}async function y(){let t=await fetch("https://fe24-js2-slutprojekt-gustaf-vingren.onrender.com/members"),n=await t.json();return console.log(n),n.members.map(t=>new e(t.username,t.email,t.role))}async function f(e,t,n){let a={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:e,email:t,role:n,id:Date.now()})};try{(await y()).forEach(t=>{if(e===t.username){alert("Username already exists");return}});let t=await fetch("https://fe24-js2-slutprojekt-gustaf-vingren.onrender.com/new-member",a),n=await t.json();await w(e),await g(C),console.log(n)}catch(e){console.log(e)}}async function E(e){try{let n=await fetch(`${t}/${e}`),a=await n.json();return console.log(a),(404===n.status||0===a.length)&&console.log("Username not found"),a}catch(e){console.log("Error getting tasks",e)}}async function k(e){let t=new Date(new Date().toISOString()).toLocaleDateString("en-US",{year:"numeric",month:"2-digit",day:"2-digit"}),a=await y();if("not-assigned"===e.username){let a={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:e.title,username:e.username,role:e.role,description:e.description,dueDate:e.dueDate,id:Date.now(),isComplete:!1,timeStamp:t})};try{let e=await fetch(n,a),t=await e.json();console.log(t)}catch(e){console.log("Error writing task",e)}return}let s=a.find(t=>t.username===e.username);if(s){if(s.role!==e.role&&"not-assigned"!==e.role)throw alert("Incorrect role.. not their job!"),console.log("Role mismatch: User role does not match task role, user-role:",e.role),Error("Role mismatch: User role does not match task role");let a={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:e.username,role:e.role,description:e.description,dueDate:e.dueDate,id:Date.now(),isComplete:!1,timeStamp:t})};try{let e=await fetch(n,a),t=await e.json();console.log(t)}catch(e){console.log("Error writing task",e)}return}throw console.log("User not found or task role mismatch"),Error("Username not found or task role mismatch")}async function w(e){let t=(await y()).find(t=>t.username===e);t&&t.displayMember()}class T{constructor(e,t,n,a,s,o,r){this.title=e,this.username=t,this.description=a,this.role=n,this.dueDate=s,this.isComplete=o,this.timeStamp=r||new Date().toISOString()}async createNewTask(){let e={title:this.title,username:this.username,role:this.role,description:this.description,dueDate:this.dueDate,isComplete:this.isComplete,timeStamp:this.timeStamp};await k(e)}static async displayTasks(e){document.querySelectorAll(".taskElement").forEach(e=>{e.remove()}),(await E(e)).forEach(e=>{if("not-assigned"===e.username){let t=document.createElement("div");t.classList.add("taskElementLoggedIn"),t.innerHTML=`
                <p>Title: ${e.title}</p>
                    <p>Assigned to: ${e.username}</p>
                    <p>For role: ${e.role}</p>
                    <p>Task: ${e.description}</p>
                    <p>Deadline: ${e.dueDate}</p>
                    <p>Task ID: ${e.id}</p>
                    <input type="checkbox" id="isCompletedBox">Status: ${e.isComplete}</input>`;let n=t.querySelector("#isCompletedBox");e.isComplete?n.checked=!0:n.checked=!1,n.addEventListener("change",async t=>{await s(e.id,n.checked),T.displayTasks(e.username)}),document.body.appendChild(t)}})}}const S=document.querySelector("#loginForm");S.addEventListener("submit",e=>{e.preventDefault();let t=new FormData(S).get("username");m(t),w(t)});const v=document.querySelector("#addTaskForm");v.addEventListener("submit",async e=>{e.preventDefault();let t=document.querySelectorAll(".taskElementP");t&&t.forEach(e=>{e.remove()});let n=new FormData(v),a=n.get("title"),s=n.get("assignedMember"),o=n.get("description"),r=n.get("due"),l=new T(a,s,n.get("role"),o,r,!1);await l.createNewTask(),await d(),await c()});const $=document.querySelector("#createAccountForm");$.addEventListener("submit",async e=>{let t=new FormData($),n=t.get("username"),a=t.get("email"),s=t.get("role");e.preventDefault(),await f(n,a,s)}),i();const C=document.querySelector("#assignedMember"),D=document.querySelector("#userFilter");g(C),g(D),c(),d();const L=document.querySelector(".createAccountDropDown"),b=document.querySelector(".filterDropDown"),j=document.querySelector(".createAccount"),x=document.querySelector(".createAccountI"),q=document.querySelector(".filters"),M=document.querySelector(".filterI");L.addEventListener("click",()=>{j.classList.toggle("createAccountShow"),x?.classList.toggle("createAccountI")}),b.addEventListener("click",()=>{q.classList.toggle("filtersShow"),M?.classList.toggle("filterI")});
//# sourceMappingURL=index.42363fcf.js.map
